<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.30.1 (20180828.1746)
 -->
<!-- Title: pi.test Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1166)">
<title>pi.test</title>
<polygon fill="white" stroke="white" points="-4,5 -4,-1166 592,-1166 592,5 -4,5"/>
<g id="clust1" class="cluster"><title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-1022 8,-1154 434,-1154 434,-1022 8,-1022"/>
</g>
<!-- File: pi.test -->
<g id="node1" class="node"><title>File: pi.test</title>
<g id="a_node1"><a xlink:title="pi.test">
<polygon fill="#f8f8f8" stroke="black" points="426,-1146 16,-1146 16,-1030 426,-1030 426,-1146"/>
<text text-anchor="start" x="24" y="-1129.2" font-family="Times,serif" font-size="16.00">File: pi.test</text>
<text text-anchor="start" x="24" y="-1111.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24" y="-1093.2" font-family="Times,serif" font-size="16.00">Time: Apr 4, 2022 at 5:14am (UTC)</text>
<text text-anchor="start" x="24" y="-1075.2" font-family="Times,serif" font-size="16.00">Duration: 1.31mins, Total samples = 77.96s (98.84%)</text>
<text text-anchor="start" x="24" y="-1057.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 77.87s, 99.88% of 77.96s total</text>
<text text-anchor="start" x="24" y="-1039.2" font-family="Times,serif" font-size="16.00">Dropped 18 nodes (cum &lt;= 0.39s)</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node"><title>N1</title>
<g id="a_node1"><a xlink:title="miniep2/pi.Original (77.92s)">
<polygon fill="#edd5d5" stroke="#b20000" points="587.25,-794 384.75,-794 384.75,-682 587.25,-682 587.25,-794"/>
<text text-anchor="middle" x="486" y="-770.8" font-family="Times,serif" font-size="24.00">pi</text>
<text text-anchor="middle" x="486" y="-744.8" font-family="Times,serif" font-size="24.00">Original</text>
<text text-anchor="middle" x="486" y="-718.8" font-family="Times,serif" font-size="24.00">21.41s (27.46%)</text>
<text text-anchor="middle" x="486" y="-692.8" font-family="Times,serif" font-size="24.00">of 77.92s (99.95%)</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node"><title>N3</title>
<g id="a_node3"><a xlink:title="math/rand.(*Rand).Float64 (56.49s)">
<polygon fill="#edd7d5" stroke="#b21000" points="587.25,-630 384.75,-630 384.75,-492 587.25,-492 587.25,-630"/>
<text text-anchor="middle" x="486" y="-606.8" font-family="Times,serif" font-size="24.00">rand</text>
<text text-anchor="middle" x="486" y="-580.8" font-family="Times,serif" font-size="24.00">(*Rand)</text>
<text text-anchor="middle" x="486" y="-554.8" font-family="Times,serif" font-size="24.00">Float64</text>
<text text-anchor="middle" x="486" y="-528.8" font-family="Times,serif" font-size="24.00">19.15s (24.56%)</text>
<text text-anchor="middle" x="486" y="-502.8" font-family="Times,serif" font-size="24.00">of 56.49s (72.46%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N3 -->
<g id="edge4" class="edge"><title>N1&#45;&gt;N3</title>
<g id="a_edge4"><a xlink:title="miniep2/pi.Original &#45;&gt; math/rand.(*Rand).Float64 (56.49s)">
<path fill="none" stroke="#b21000" stroke-width="4" d="M486,-681.629C486,-668.495 486,-654.239 486,-640.298"/>
<polygon fill="#b21000" stroke="#b21000" points="489.5,-640.223 486,-630.223 482.5,-640.223 489.5,-640.223"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="miniep2/pi.Original &#45;&gt; math/rand.(*Rand).Float64 (56.49s)">
<text text-anchor="middle" x="506" y="-652.3" font-family="Times,serif" font-size="14.00"> 56.49s</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node"><title>N2</title>
<g id="a_node2"><a xlink:title="testing.(*B).launch (77.81s)">
<polygon fill="#edd5d5" stroke="#b20000" points="528,-1110 444,-1110 444,-1066 528,-1066 528,-1110"/>
<text text-anchor="middle" x="486" y="-1099.6" font-family="Times,serif" font-size="8.00">testing</text>
<text text-anchor="middle" x="486" y="-1090.6" font-family="Times,serif" font-size="8.00">(*B)</text>
<text text-anchor="middle" x="486" y="-1081.6" font-family="Times,serif" font-size="8.00">launch</text>
<text text-anchor="middle" x="486" y="-1072.6" font-family="Times,serif" font-size="8.00">0 of 77.81s (99.81%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node"><title>N8</title>
<g id="a_node8"><a xlink:title="testing.(*B).runN (77.92s)">
<polygon fill="#edd5d5" stroke="#b20000" points="528,-978 444,-978 444,-934 528,-934 528,-978"/>
<text text-anchor="middle" x="486" y="-967.6" font-family="Times,serif" font-size="8.00">testing</text>
<text text-anchor="middle" x="486" y="-958.6" font-family="Times,serif" font-size="8.00">(*B)</text>
<text text-anchor="middle" x="486" y="-949.6" font-family="Times,serif" font-size="8.00">runN</text>
<text text-anchor="middle" x="486" y="-940.6" font-family="Times,serif" font-size="8.00">0 of 77.92s (99.95%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N8 -->
<g id="edge3" class="edge"><title>N2&#45;&gt;N8</title>
<g id="a_edge3"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (77.81s)">
<path fill="none" stroke="#b20000" stroke-width="5" d="M486,-1065.82C486,-1044.77 486,-1012.22 486,-988.204"/>
<polygon fill="#b20000" stroke="#b20000" points="490.375,-988.167 486,-978.167 481.625,-988.167 490.375,-988.167"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (77.81s)">
<text text-anchor="middle" x="506" y="-1000.3" font-family="Times,serif" font-size="14.00"> 77.81s</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node"><title>N6</title>
<g id="a_node6"><a xlink:title="math/rand.(*Rand).Int63 (37.32s)">
<polygon fill="#eddad5" stroke="#b22300" points="560,-439.5 412,-439.5 412,-336.5 560,-336.5 560,-439.5"/>
<text text-anchor="middle" x="486" y="-421.9" font-family="Times,serif" font-size="17.00">rand</text>
<text text-anchor="middle" x="486" y="-402.9" font-family="Times,serif" font-size="17.00">(*Rand)</text>
<text text-anchor="middle" x="486" y="-383.9" font-family="Times,serif" font-size="17.00">Int63</text>
<text text-anchor="middle" x="486" y="-364.9" font-family="Times,serif" font-size="17.00">6.20s (7.95%)</text>
<text text-anchor="middle" x="486" y="-345.9" font-family="Times,serif" font-size="17.00">of 37.32s (47.87%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N6 -->
<g id="edge5" class="edge"><title>N3&#45;&gt;N6</title>
<g id="a_edge5"><a xlink:title="math/rand.(*Rand).Float64 &#45;&gt; math/rand.(*Rand).Int63 (37.32s)">
<path fill="none" stroke="#b22300" stroke-width="3" d="M486,-491.925C486,-478.046 486,-463.527 486,-449.917"/>
<polygon fill="#b22300" stroke="#b22300" points="489.5,-449.712 486,-439.712 482.5,-449.712 489.5,-449.712"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="math/rand.(*Rand).Float64 &#45;&gt; math/rand.(*Rand).Int63 (37.32s)">
<text text-anchor="middle" x="506" y="-462.3" font-family="Times,serif" font-size="14.00"> 37.32s</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node"><title>N4</title>
<g id="a_node4"><a xlink:title="math/rand.(*rngSource).Int63 (31.12s)">
<polygon fill="#eddbd5" stroke="#b22a00" points="575,-283.5 397,-283.5 397,-160.5 575,-160.5 575,-283.5"/>
<text text-anchor="middle" x="486" y="-262.7" font-family="Times,serif" font-size="21.00">rand</text>
<text text-anchor="middle" x="486" y="-239.7" font-family="Times,serif" font-size="21.00">(*rngSource)</text>
<text text-anchor="middle" x="486" y="-216.7" font-family="Times,serif" font-size="21.00">Int63</text>
<text text-anchor="middle" x="486" y="-193.7" font-family="Times,serif" font-size="21.00">13.56s (17.39%)</text>
<text text-anchor="middle" x="486" y="-170.7" font-family="Times,serif" font-size="21.00">of 31.12s (39.92%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node"><title>N5</title>
<g id="a_node5"><a xlink:title="math/rand.(*rngSource).Uint64 (17.55s)">
<polygon fill="#edddd5" stroke="#b24000" points="570,-108 402,-108 402,-0 570,-0 570,-108"/>
<text text-anchor="middle" x="486" y="-85.6" font-family="Times,serif" font-size="23.00">rand</text>
<text text-anchor="middle" x="486" y="-60.6" font-family="Times,serif" font-size="23.00">(*rngSource)</text>
<text text-anchor="middle" x="486" y="-35.6" font-family="Times,serif" font-size="23.00">Uint64</text>
<text text-anchor="middle" x="486" y="-10.6" font-family="Times,serif" font-size="23.00">17.55s (22.51%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge7" class="edge"><title>N4&#45;&gt;N5</title>
<g id="a_edge7"><a xlink:title="math/rand.(*rngSource).Int63 &#45;&gt; math/rand.(*rngSource).Uint64 (17.55s)">
<path fill="none" stroke="#b24000" stroke-width="2" d="M486,-160.13C486,-146.563 486,-132.144 486,-118.475"/>
<polygon fill="#b24000" stroke="#b24000" points="489.5,-118.194 486,-108.194 482.5,-118.194 489.5,-118.194"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="math/rand.(*rngSource).Int63 &#45;&gt; math/rand.(*rngSource).Uint64 (17.55s)">
<text text-anchor="middle" x="506" y="-130.3" font-family="Times,serif" font-size="14.00"> 17.55s</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N4 -->
<g id="edge6" class="edge"><title>N6&#45;&gt;N4</title>
<g id="a_edge6"><a xlink:title="math/rand.(*Rand).Int63 &#45;&gt; math/rand.(*rngSource).Int63 (31.12s)">
<path fill="none" stroke="#b22a00" stroke-width="2" d="M486,-336.456C486,-323.052 486,-308.325 486,-294.049"/>
<polygon fill="#b22a00" stroke="#b22a00" points="489.5,-293.759 486,-283.759 482.5,-293.759 489.5,-293.759"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="math/rand.(*Rand).Int63 &#45;&gt; math/rand.(*rngSource).Int63 (31.12s)">
<text text-anchor="middle" x="506" y="-306.3" font-family="Times,serif" font-size="14.00"> 31.12s</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node"><title>N7</title>
<g id="a_node7"><a xlink:title="miniep2/pi.BenchmarkOriginal (77.92s)">
<polygon fill="#edd5d5" stroke="#b20000" points="528,-882 444,-882 444,-846 528,-846 528,-882"/>
<text text-anchor="middle" x="486" y="-871.1" font-family="Times,serif" font-size="8.00">pi</text>
<text text-anchor="middle" x="486" y="-862.1" font-family="Times,serif" font-size="8.00">BenchmarkOriginal</text>
<text text-anchor="middle" x="486" y="-853.1" font-family="Times,serif" font-size="8.00">0 of 77.92s (99.95%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N1 -->
<g id="edge1" class="edge"><title>N7&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="miniep2/pi.BenchmarkOriginal &#45;&gt; miniep2/pi.Original (77.92s)">
<path fill="none" stroke="#b20000" stroke-width="5" d="M486,-845.758C486,-834.731 486,-819.66 486,-804.317"/>
<polygon fill="#b20000" stroke="#b20000" points="490.375,-804.234 486,-794.235 481.625,-804.235 490.375,-804.234"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="miniep2/pi.BenchmarkOriginal &#45;&gt; miniep2/pi.Original (77.92s)">
<text text-anchor="middle" x="506" y="-816.3" font-family="Times,serif" font-size="14.00"> 77.92s</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N7 -->
<g id="edge2" class="edge"><title>N8&#45;&gt;N7</title>
<g id="a_edge2"><a xlink:title="testing.(*B).runN &#45;&gt; miniep2/pi.BenchmarkOriginal (77.92s)">
<path fill="none" stroke="#b20000" stroke-width="5" d="M486,-933.671C486,-921.284 486,-905.552 486,-892.272"/>
<polygon fill="#b20000" stroke="#b20000" points="490.375,-892.258 486,-882.258 481.625,-892.258 490.375,-892.258"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="testing.(*B).runN &#45;&gt; miniep2/pi.BenchmarkOriginal (77.92s)">
<text text-anchor="middle" x="506" y="-904.3" font-family="Times,serif" font-size="14.00"> 77.92s</text>
</a>
</g>
</g>
</g>
</g></svg>
